#include <WiFi.h>
#include <WebSocketsClient.h>

const char* ssid = "TheCrib1";
const char* password = "DeezNuts";

const char* websocketServer = "192.168.2.26";  // Your server IP
const uint16_t websocketPort = 8080;

const int driveMotorA = 12;
const int driveMotorB = 14;
const int steeringMotorA = 13;
const int steeringMotorB = 26;

WebSocketsClient webSocket;
unsigned long lastReconnectAttempt = 0;

void setupMotors() {
    pinMode(driveMotorA, OUTPUT);
    pinMode(driveMotorB, OUTPUT);
    pinMode(steeringMotorA, OUTPUT);
    pinMode(steeringMotorB, OUTPUT);
}

void driveForward() {
    digitalWrite(driveMotorA, HIGH);
    digitalWrite(driveMotorB, LOW);
}

void driveReverse() {
    digitalWrite(driveMotorA, LOW);
    digitalWrite(driveMotorB, HIGH);
}

void steerLeft() {
    digitalWrite(steeringMotorA, HIGH);
    digitalWrite(steeringMotorB, LOW);
}

void steerRight() {
    digitalWrite(steeringMotorA, LOW);
    digitalWrite(steeringMotorB, HIGH);
}

void stopMotors() {
    digitalWrite(driveMotorA, LOW);
    digitalWrite(driveMotorB, LOW);
    digitalWrite(steeringMotorA, LOW);
    digitalWrite(steeringMotorB, LOW);
}

void webSocketEvent(WStype_t type, uint8_t *payload, size_t length) {
    if (type == WStype_TEXT) {
        Serial.printf("Received command: %s\n", payload);
        String command = String((char*)payload);

        if (command == "forward") {
            driveForward();
        } else if (command == "reverse") {
            driveReverse();
        } else if (command == "left") {
            steerLeft();
        } else if (command == "right") {
            steerRight();
        } else if (command == "stop") {
            stopMotors();
        }
    } else if (type == WStype_DISCONNECTED) {
        Serial.println("WebSocket Disconnected!");
    }
}

void reconnectWebSocket() {
    if (millis() - lastReconnectAttempt > 5000) {  // Attempt reconnect every 5 seconds
        Serial.println("Reconnecting WebSocket...");
        webSocket.begin(websocketServer, websocketPort, "/");
        webSocket.onEvent(webSocketEvent);
        lastReconnectAttempt = millis();
    }
}

void setup() {
    Serial.begin(115200);
    setupMotors();

    WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.println("Connecting to WiFi...");
    }
    Serial.println("Connected to WiFi");

    webSocket.begin(websocketServer, websocketPort, "/");
    webSocket.onEvent(webSocketEvent);
}

void loop() {
    webSocket.loop();

    if (webSocket.isConnected() == false) {
        reconnectWebSocket();
    }
}
